name: cmake-workflow
on:
    - push
    - pull_request

jobs:
    job:
        name: ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ ubuntu-latest, macos-11, windows-latest ]
                include:
                    -   os: windows-latest
                        triplet: x64-windows
                    -   os: ubuntu-latest
                        triplet: x64-linux
                    -   os: macos-11
                        triplet: x64-osx
        env:
            CMAKE_BUILD_DIR: ${{ github.workspace }}/builddir/
            VCPKG_ROOT: ${{ github.workspace }}/vcpkg

        steps:
            -   name: Setup XCode
                uses: maxim-lobanov/setup-xcode@v1
                if: matrix.os == 'macos-11'
                with:
                    xcode-version: "13.0"

            -   uses: actions/checkout@v2
                name: Checkout

            -   uses: lukka/get-cmake@latest
                name: Get CMake

            -   name: Install Deps (Windows)
                if: matrix.os == 'windows-latest'
                uses: crazy-max/ghaction-chocolatey@v1
                with:
                    args: install nasm

            -  name: Use MSVC (Windows)
               if: matrix.os == 'windows-latest'
               uses: ilammy/msvc-dev-cmd@v1
#            - name: Set up Clang (Windows)
#              if: matrix.os == 'windows-latest'
#              uses: egor-tensin/setup-clang@v1
#              with:
#                  version: latest
#                  platform: x64

            -   name: Install Deps (Ubuntu)
                if: matrix.os == 'ubuntu-latest'
                run: sudo deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main && sudo apt-get update && sudo apt-get install llvm-13 nasm libxext-dev libavcodec-dev libavformat-dev libavdevice-dev libavfilter-dev

            -   name: Install Deps (MacOS)
                if: matrix.os == 'macos-11'
                run: brew install nasm ffmpeg

            -   name: Run vcpkg
                uses: lukka/run-vcpkg@v10
                with:
                    setupOnly: true
                    vcpkgJsonGlob: "**/vcpkg.json"
                    vcpkgDirectory: "${{ github.workspace }}/vcpkg"
                    vcpkgGitCommitId: "709e9ec32e27319636c047a38744e1ce0e229ae4"
                    appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
                    additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed

            -   name: Build
                uses: lukka/run-cmake@v10
                with:
                    configurePreset: 'ninja-multi-vcpkg'
                    buildPreset: 'ninja-multi-vcpkg'

            -   name: Test
                run: builds/ninja-multi-vcpkg/tests/Debug/abyss_test
